1.GET Method
 Valid request:
 Verify GET/locations response include list of all locations
 Verify GET/locations returns status code 200
 Verify GET/locations by name in response are required information of location(id, name, description)
 Verify GET/locations by id in response are required information of location(id, name, description)
 Verify GET/locations by name returns status code 200
 Verify GET/locations by id returns status code 200

 Invalid request:
 Verify GET/locations by name for authorized user with parameter name: non-exist, deleted/changed, empty, length less 2, length more 1000 returns status code 400
 Verify GET/locations by id for authorized user with parameter name: non-exist, deleted/changed, empty, length less 2, length more 1000 returns status code 400
 Verify GET/locations for non-authorized user returns status code 401
 Verify GET/locations by name for non-authorized user returns status code 401
 Verify GET/locations by id for non-authorized user returns status code 401
 Verify GET/locations by name for user with valid username and invalid password returns status code 401
 Verify GET/locations by id for user with valid username and invalid password returns status code 401
 Verify GET/locations by name for user with invalid username and valid password returns status code 401
 Verify GET/locations by id for user with invalid username and valid password returns status code 401
 Verify GET/locations by name for user with invalid username and password returns status code 401
 Verify GET/locations by id for user with invalid username and password returns status code 401
 Verify GET/locations by id for user with swapped username and password returns status code 401
 Verify GET/locations by name for user with swapped username and password returns status code 401

2.POST Method
 Valid request:
 Verify POST/locations for authorized user create location with data(name, description)
 Verify POST/locations for authorized user returns status code 201
 Verify POST/locations for authorized user with length of name 5 characters and length of description 1000 characters create location and returns status code 201
 Verify POST/locations for authorized user with length of name 1000 characters and length of description 5 characters create location and returns status code 201
 Verify POST/locations for authorized user with length of name 5-1000 characters and length of description 5-1000 characters create location and returns status code 201

 Invalid request:
 Verify POST/locations for authorized user with parameter name: empty, length less 2 and more 1000 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: length of name less than 5 characters and length description 1000 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: length of name 5 characters and length of description less 5 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: length of name and description less 5 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: length of name and description  more than 1000 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: empty name and length of description 1000 characters doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: length of name 5 characters and empty description doesn't create a location and returns status code 400
 Verify POST/locations for authorized user with parameters: empty name and description doesn't create a location and returns status code 400
 Verify POST/locations for non-authorized user with parameters: length of name 5-1000 characters and length of description 5-1000 characters doesn't create a location and returns status code 401
 Verify POST/locations for non-authorized user with parameters: empty name and description doesn't create a location and returns status code 401
 Verify POST/locations for user with valid username and invalid password with parameters: length of name 5-1000 characters and length description 5-1000 characters doesn't create a location returns status code 401
 Verify POST/locations for user with invalid username and valid password with parameters: length of name 5-1000 characters and length of description 5-1000 characters doesn't create a location returns status code 401
 Verify POST/locations for user with invalid username and password with parameters: length of name 5-1000 characters  and length of description 5-1000 characters doesn't create a location returns status code 401
 Verify POST/locations for authorized user with parameter description: empty, length 5-1000 characters, length less 5 characters, length more than 1000 characters doesn't create a location and returns status code 400

3.PATCH Method
 Valid request:
 Verify PATCH/locations/:name for authorized user with new name updates a location
 Verify PATCH/locations/:name for authorized user with new description updates a location
 Verify PATCH/locations/:name for authorized user responce returns status code 200
 Verify PATCH/locations/:name for authorized user with length of new name 5-1000 characters updates a location returns status code 200
 Verify PATCH/locations/:name for authorized user with length of new description 5-1000 characters updates a location returns status code 200

 Invalid request:
 Verify PATCH/locations/:name for authorized user with with parameter name: empty, length less 5 characters, length more 1000 characters doesn't update a location and returns status code 400
 Verify PATCH/locations/:name for authorized user with with parameter description: empty, length less 5 characters, length more 1000 characters doesn't update a location and returns status code 400
 Verify PATCH/locations/:name for non-authorized user with with parameter name doesn't update a location and returns status code 401
 Verify PATCH/locations/:name for non-authorized user with with parameter description doesn't update a location and returns status code 401
 Verify PATCH/locations/:name for user with valid username and invalid password with parameter name doesn't update a location and returns status code 401
 Verify PATCH/locations/:name for user with invalid username and valid password with parameter name doesn't update a location and returns status code 401
 Verify PATCH/locations/:name for user with invalid username and invalid password with parameter name doesn't update a location and returns status code 401

4.DELETE Method
 Valid request:
 Verify DELETE/locations/:name for authorized user with parameter new_name of location for replace, deletes location with name and replaced on new_name location for employees which has deleted location
 Verify DELETE/locations/:name for authorized user with valid parameters responce returns status code 200
 Verify DELETE/locations/:name for authorized user with valid name that unused in employee
 Verify DELETE/locations/:name for authorized user that unused in employee responce returns status code 200

 Invalid request:
 Verify DELETE/locations/:name for authorized user with name non-exist in database status code 400
 Verify DELETE/locations/:name for authorized user with same name and new_name returns status code 400
 Verify DELETE/locations/:name for non-authorized user with new_name non-exist in database returns status code 401
 Verify DELETE/locations/:name for user with valid username and invalid password with new_name non-exist in database returns status code 401
 Verify DELETE/locations/:name for user with invalid username and valid password with new_name non-exist in database returns status code 401
 Verify DELETE/locations/:name for user with invalid username and password with new_name non-exist in database returns status code 401
